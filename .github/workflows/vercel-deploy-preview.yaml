name: Vercel Deploy Preview

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  prettier-format-check:
    uses: ./.github/workflows/prettier-format-check.yaml

  eslint-lint:
    needs: prettier-format-check
    uses: ./.github/workflows/eslint-lint.yaml

  vercel-deploy-preview:
    needs: eslint-lint
    timeout-minutes: 10
    runs-on: ubuntu-latest
    environment:
      name: Preview
      url: ${{ steps.vercel-deploy.outputs.url }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get Npm Global Directory
        id: npm-global-dir
        run: echo "dir=$(npm prefix -g)" >> $GITHUB_OUTPUT

      - name: Get Latest Vercel CLI Version
        id: vercel-version
        run: echo "version=$(npm show vercel version)" >> $GITHUB_OUTPUT

      - name: Cache Npm Global Dependencies
        uses: actions/cache@v4
        id: npm-global-cache
        with:
          path: |
            ${{ steps.npm-global-dir.outputs.dir }}
          key: |
            ${{ runner.os }}-${{ github.job }}-${{ steps.vercel-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ steps.vercel-version.outputs.version }}

      - name: Install Dependencies
        run: npm ci

      - name: Lint Code
        run: npm run lint

      - name: Install Vercel CLI
        if: steps.npm-global-cache.outputs.cache-hit != 'true'
        run: npm install --global vercel@latest

      - name: Pull Vercel Remote Environment Variables
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: vercel-deploy
        run: echo "url=$(vercel deploy --prebuilt --token=${VERCEL_TOKEN})" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: 842u_BOT
          DISCORD_AVATAR: https://avatars.githubusercontent.com/u/23544888?v=4
        uses: Ilshidur/action-discord@master
        with:
          args: |
            New PR PREVIEW for {{ EVENT_PAYLOAD.repository.full_name }}
            ${{ steps.vercel-deploy.outputs.url }}
